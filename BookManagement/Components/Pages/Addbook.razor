@page "/addbook"
@inject IBookRepository Repository
@inject NavigationManager Navigation


<PageTitle>Add New Book</PageTitle>
<div class="row justify-content-center">
    <div class="col-6">
        <EditForm method="post" FormName="AddBookForm" OnValidSubmit="AddBook" Model="Book" autocomplete="off">

            <h3>
                Add New Book
            </h3>
            <div class="mb-3">
                <label for="title" class="col-form-label">
                    Title
                </label>
                <InputText id="title" @bind-Value="Book.Title" class="form-control shadow-none" />
            </div>
            <div class="mb-3">
                <label for="author" class="col-form-label">
                    Author
                </label>
                <InputText id="Author" @bind-Value="Book.Author" class="form-control shadow-none" />
            </div>
            <div class="mb-3">
                <label for="publicationDate" class="col-form-label">
                    PublicationDate
                </label>
                <InputDate id="PublicationDate" @bind-Value="Book.PublicationDate" class="form-control shadow-none" />
            </div>
            <div class="mb-3">
                <label for="category" class="col-form-label">
                    Category
                </label>
                <InputSelect id="Category" @bind-Value="Book.Category" class="form-control shadow-none">
                    <option value="0">
                        Select Category
                    </option>
                    @foreach (var category in Enum.GetValues(typeof(Category)))
                    {
                        <option value="@category">
                            @category.ToString()
                        </option>
                    }
                </InputSelect>
            </div>
            <div class="mb-3">
                <button  class="btn btn-primary shadow-none">
                    Add New
                </button>
                <a href="/" class="btn  btn-secondary shadow-none ms-3">
                    Back to List
                </a>
            </div>
            <DataAnnotationsValidator />
            <ValidationSummary/>
        </EditForm>

    </div>

</div>

@code {
    [SupplyParameterFromForm]
    public Book Book { get; set; } = new();

    private async Task AddBook()
    {
      
        await Repository.AddAsync(Book);
        if (Navigation != null)
        {
            try
            {
                Navigation.NavigateTo("/");
            }
            catch (NavigationException ex)
            {
                // Handle the exception (e.g., log it or show a message to the user)
            }
        }

    }
    
}


